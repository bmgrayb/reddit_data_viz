install install.packages("rvest")
install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
lego_movie %>%
html_nodes("table") %>%
.[[3]] %>%
html_table()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(rvest)
WSwinners <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
library(rvest)
library(rvest)
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
WSwinners<-WSwinners[[1]]
print(WSwinners)
head(WSwinners)
WSwinners<-WSwinners[-1,]
head(WSwinners)
print(WSwinners)
###
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[-1,]
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
head(WSwinners)
WSwinners<-WSwinners[-1,]
WSwinners<-WSwinners[[-1,]]
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
WSwinners<-WSwinners[2:3]
head(WSwinners)
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
library(rvest)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
install.packages("plyr")
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
count(WSwinners,"WINNER")
count(WSwinners,"X2")
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-2,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
head(WSwinners)
WSwinners<-WSwinners[-1,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-2,]
head(WSwinners)
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,] %>%WSwinners[-1,]
library(rvest)
library(plyr)
source <- read_html("http://www.espn.com/mlb/worldseries/history/winners")
WSwinners<-source %>%
html_nodes(xpath='//*[@id="my-players-table"]/div[1]/div/table') %>%
html_table()
WSwinners<-WSwinners[[1]]
WSwinners<-WSwinners[-1,]
WSwinners<-WSwinners[-1,]
head(WSwinners)
clear
View(WSwinners)
View(WSwinners)
View(lego_movie)
rm(list=ls())
library(rvest)
R.version
setwd("~/dev/reddit_data_viz/december")
library(rvest)
library(tidyverse)
library(lubridate)
lake_url <- "http://www.aos.wisc.edu/~sco/lakes/Mendota-ice.html"
lake_html <- "data/raw_lake_data.html"
if(!file.exists(lake_html) | FALSE){
download.file(lake_url,lake_html,method="auto",mode="w")
}
lake_data <- read_html(lake_html)
lake_table <- lake_data %>%
html_nodes("table") %>%
html_table()
tab1 <- lake_table[[1]]
tab2 <- lake_table[[2]]
tab3 <- lake_table[[3]]
tab4 <- lake_table[[4]]
initialize_df <- function(){
df <- data.frame(
years=character(),
closed=character(),
opened=character(),
days=numeric(),
stringsAsFactors = FALSE
)
return (df)
}
parse_col <- function(x, splitter="\n"){
return(unlist(strsplit(x, split=splitter)))
}
View(tab1)
View(tab1)
tab1[,1:5]
tab1[,1:4]
tab1[,4:]
tab1[,4:ncols(tab1)]
tab1[,4:ncol(tab1)]
tab1[,6:ncol(tab1)]
tab1 <- lake_table[[1]]
tab2 <- lake_table[[2]]
tab3 <- lake_table[[3]]
tab4 <- lake_table[[4]]
initialize_df <- function(){
df <- data.frame(
years=character(),
closed=character(),
opened=character(),
days=numeric(),
stringsAsFactors = FALSE
)
return (df)
}
parse_col <- function(x, splitter="\n"){
return(unlist(strsplit(x, split=splitter)))
}
fill_df <- function(df,tab){
tab1 <- tab[,1:4]
tab2 <- tab[,6:ncol(tab)]
df1 <- load_df(df, tab1)
df2 <- load_df(df, tab2)
return(rbind(df1,df2))
}
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 0:ncols(tab)){
print(tab[i])
}
}
df1 <- initialize_df()
df2 <- initialize_df()
df3 <- initialize_df()
df4 <- initialize_df()
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 0:ncol(tab)){
print(tab[i])
}
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 0:ncol(tab)){
temp_df[i] = parse_col(tab[i])
}
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 0:ncol(tab)){
temp_df[i] = parse_col(tab[,i])
}
}
df1_filled <- fill_df(df1,tab1)
parse_col(tab1[,0])
parse_col(tab1[,1])
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
temp_df[i] = parse_col(tab[,i])
}
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
temp_df[i] = parse_col(tab[,i])
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(curr)
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
temp_df[,i] = curr
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(temp_df[,i])
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(temp_df[,i])
temp_df[,i] <- curr
print(temp_df)
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
initialize_df <- function(){
df <- data.frame(
years=character(),
closed=character(),
opened=character(),
days=character(),
stringsAsFactors = FALSE
)
return (df)
}
df1 <- initialize_df()
df2 <- initialize_df()
df3 <- initialize_df()
df4 <- initialize_df()
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(temp_df[,i])
replace(temp_df[,i],values=curr)
print(temp_df)
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
View(df1_filled)
View(df1_filled)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(curr)
replace(temp_df[,i],values=curr)
print(temp_df)
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
temp_df <- data.frame(df)
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(curr)
replace(temp_df[,i], 1:nrow(curr),curr)
print(temp_df)
}
return(temp_df)
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
cols <- c()
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
cols <- c(cols,curr)
}
return(data.frame(cols))
}
df1_filled <- fill_df(df1,tab1)
View(df1_filled)
load_df <- function(df,tab){
cols <- c()
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(typeof(curr))
cols <- c(cols,curr)
}
return(data.frame(cols))
}
df1_filled <- fill_df(df1,tab1)
load_df <- function(df,tab){
cols <- c()
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(curr)
print(typeof(curr))
cols <- c(cols,curr)
}
return(data.frame(cols))
}
parse_col <- function(x, splitter="\n"){
load_df <- function(df,tab){
cols <- c()
for(i in 1:ncol(tab)){
curr <- parse_col(tab[,i])
print(curr)
print(typeof(curr))
cols <- c(cols,curr)
}
return(data.frame(cols))
}
parse_col <- function(x, splitter="\n"){
return((strsplit(x, split=splitter)))
}
df1_filled <- fill_df(df1,tab1)
View(df1_filled)
View(df1_filled)
rm(list=ls())
